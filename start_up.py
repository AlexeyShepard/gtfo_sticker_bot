import io
import logging
from telegram import Update, InputSticker
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, filters, MessageHandler
from settings import *
from PIL import Image

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id, text="I'm a bot, please talk to me!")

async def create_sticker_set(update: Update, context: ContextTypes.DEFAULT_TYPE):
    update_dict = update.to_dict()

    sticker_file_id = update.message.photo[-1].file_id  

    file = await context.bot.get_file(sticker_file_id)
    photo_bytes = await file.download_as_bytearray()
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é PIL
    image = Image.open(io.BytesIO(photo_bytes))
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä)
    image = image.resize((512, 512))  # –°—Ç–∏–∫–µ—Ä—ã –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç —Ä–∞–∑–º–µ—Ä 512x512
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    temp_file = io.BytesIO()
    image.save(temp_file, format='PNG')
    temp_file.seek(0)

    input_sticker = InputSticker(
        sticker=temp_file,
        emoji_list=["üòÄ"],  # –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏, –∞—Å—Å–æ—Ü–∏–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ —Å—Ç–∏–∫–µ—Ä–æ–º
        format='static'
    )   

    new_pack = await context.bot.create_new_sticker_set(
            user_id=update.effective_chat.id,
            name=f'jestko_testim_maxima_by_{context.bot.username}',
            title='–ñ–µ—Å—Ç–∫–æ —Ç–µ—Å—Ç–∏–º –ú–∞–∫—Å–∏–º–∞',
            stickers=[input_sticker]
        )
    
    pack_link = f"https://t.me/addstickers/jestko_testim_maxima_by_{context.bot.username}"

    await update.message.reply_text(f"–°—Ç–∏–∫–µ—Ä-–ø–∞–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ–≥–æ:\n{pack_link}")
    


if __name__ == '__main__':
    application = ApplicationBuilder().token(TOKEN).build()
    
    start_handler = CommandHandler('start', start)
    sticker_set_create_handler = MessageHandler(filters.PHOTO, create_sticker_set)
    application.add_handler(start_handler)
    application.add_handler(sticker_set_create_handler)
    
    application.run_polling()